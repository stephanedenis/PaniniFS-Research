AWSTemplateFormatVersion: '2010-09-09'
Description: "Dh\u0101tu Processing Cluster Infrastructure"
Parameters:
  KeyPairName:
    Description: EC2 Key Pair for SSH access
    Type: AWS::EC2::KeyPair::KeyName
  SubnetIds:
    Description: Subnets for cluster deployment
    Type: List<AWS::EC2::Subnet::Id>
  VpcId:
    Description: "VPC for dh\u0101tu processing cluster"
    Type: AWS::EC2::VPC::Id
Resources:
  ApplicationLoadBalancer:
    Properties:
      Name: dhatu-processing-alb
      Scheme: internet-facing
      SecurityGroups:
      - Ref: LoadBalancerSecurityGroup
      Subnets:
        Ref: SubnetIds
      Type: application
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
  CPUComputeASG:
    Properties:
      AutoScalingGroupName: dhatu-cpu-compute-asg
      DesiredCapacity: 4
      HealthCheckGracePeriod: 300
      HealthCheckType: ELB
      LaunchTemplate:
        LaunchTemplateId:
          Ref: CPUComputeLaunchTemplate
        Version:
          Fn::GetAtt:
          - CPUComputeLaunchTemplate
          - LatestVersionNumber
      MaxSize: 20
      MinSize: 2
      Tags:
      - Key: Name
        PropagateAtLaunch: true
        Value: dhatu-cpu-compute
      TargetGroupARNs:
      - Ref: CPUComputeTargetGroup
      VPCZoneIdentifier:
        Ref: SubnetIds
    Type: AWS::AutoScaling::AutoScalingGroup
  CPUComputeLaunchTemplate:
    Properties:
      LaunchTemplateData:
        IamInstanceProfile:
          Arn:
            Fn::GetAtt:
            - ECSInstanceProfile
            - Arn
        ImageId: ami-0abcdef1234567890
        InstanceType: m5.2xlarge
        KeyName:
          Ref: KeyPairName
        SecurityGroupIds:
        - Ref: ComputeSecurityGroup
        UserData:
          Fn::Base64:
            Fn::Sub: '#!/bin/bash

              echo ECS_CLUSTER=${DhatuProcessingCluster} >> /etc/ecs/ecs.config

              echo ECS_ENABLE_CONTAINER_METADATA=true >> /etc/ecs/ecs.config

              yum update -y

              yum install -y docker

              systemctl start docker

              systemctl enable docker

              '
      LaunchTemplateName: dhatu-cpu-compute-template
    Type: AWS::EC2::LaunchTemplate
  CPUHighAlarm:
    Properties:
      AlarmActions:
      - Ref: ScaleUpPolicy
      AlarmDescription: Scale up when CPU utilization is high
      AlarmName: dhatu-cpu-high-utilization
      ComparisonOperator: GreaterThanThreshold
      EvaluationPeriods: 2
      MetricName: CPUUtilization
      Namespace: AWS/EC2
      Period: 300
      Statistic: Average
      Threshold: 70
    Type: AWS::CloudWatch::Alarm
  ComputeSecurityGroup:
    Properties:
      GroupDescription: "Security group for dh\u0101tu processing cluster"
      GroupName: dhatu-compute-sg
      SecurityGroupIngress:
      - CidrIp: 0.0.0.0/0
        Description: SSH access
        FromPort: 22
        IpProtocol: tcp
        ToPort: 22
      - Description: Application ports
        FromPort: 8080
        IpProtocol: tcp
        SourceSecurityGroupId:
          Ref: LoadBalancerSecurityGroup
        ToPort: 8090
      VpcId:
        Ref: VpcId
    Type: AWS::EC2::SecurityGroup
  DhatuProcessingCluster:
    Properties:
      ClusterName: dhatu-processing-cluster
      ClusterSettings:
      - Name: containerInsights
        Value: enabled
      Tags:
      - Key: Environment
        Value: production
      - Key: Application
        Value: dhatu-processing
    Type: AWS::ECS::Cluster
  GPUComputeASG:
    Properties:
      AutoScalingGroupName: dhatu-gpu-compute-asg
      DesiredCapacity: 2
      LaunchTemplate:
        LaunchTemplateId:
          Ref: GPUComputeLaunchTemplate
        Version:
          Fn::GetAtt:
          - GPUComputeLaunchTemplate
          - LatestVersionNumber
      MaxSize: 8
      MinSize: 1
      Tags:
      - Key: Name
        PropagateAtLaunch: true
        Value: dhatu-gpu-compute
      VPCZoneIdentifier:
        Ref: SubnetIds
    Type: AWS::AutoScaling::AutoScalingGroup
  GPUComputeLaunchTemplate:
    Properties:
      LaunchTemplateData:
        IamInstanceProfile:
          Arn:
            Fn::GetAtt:
            - ECSInstanceProfile
            - Arn
        ImageId: ami-0abcdef1234567890
        InstanceType: p3.2xlarge
        KeyName:
          Ref: KeyPairName
        SecurityGroupIds:
        - Ref: ComputeSecurityGroup
      LaunchTemplateName: dhatu-gpu-compute-template
    Type: AWS::EC2::LaunchTemplate
